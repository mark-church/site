---
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
      filters:
      - name: envoy.http_connection_manager
        config:
          route_config:
            virtual_hosts:
            - name: hugo-virtual-host
              domains: "*"
              routes:
              - route:
                  cluster: hugo-cluster
                match:
                  prefix: "/"
          stat_prefix: ingress_http
          http_filters:
          - name: envoy.router
            config: {}
          access_log:
            name: envoy.file_access_log
            config:
              path: "/var/log/envoy.log"
              json_format:
                start_time: "%START_TIME%"
                method: "%REQ(:METHOD)%"
                path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                protocol: "%PROTOCOL%"
                response_code: "%RESPONSE_CODE%"
                response_flags: "%RESPONSE_FLAGS%"
                bytes_rcvd: "%BYTES_RECEIVED%"
                bytes_snt: "%BYTES_SENT%"
                duration: "%DURATION%"
                x-envoy-upstream-svc-time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                xff: "%REQ(X-FORWARDED-FOR)%"
                user_agent: "%REQ(USER-AGENT)%"
                x-request-id: "%REQ(X-REQUEST-ID)%"
                backend_address: "%UPSTREAM_HOST%"
                client: "%DOWNSTREAM_REMOTE_ADDRESS%"
                referer: "%REQ(REFERER)%"
  clusters:
  - name: hugo-cluster
    hosts:
    - socket_address:
        address: localhost
        port_value: 8080
    lb_policy: round_robin
    type: strict_dns
    connect_timeout: 1s
    health_checks:
    - timeout: 2s
      interval: 10s
      unhealthy_threshold: 1
      healthy_threshold: 3
      http_health_check:
        path: "/"
admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8002
